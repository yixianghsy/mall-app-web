{"remainingRequest":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/babel-loader/lib/index.js!/media/hsy/128/hsy-IdeaProject/mall-app-web/src/permission.js","dependencies":[{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/src/permission.js","mtime":1621909219640},{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\n * 权限校验：\n *  Vue Router中的 前置钩子函数 beforeEach(to, from, next)\n * 当进行路由跳转之前，进行判断 是否已经登录 过，登录过则允许访问非登录页面，否则 回到登录页\n * \n * to:  即将要进入的目标路由对象\n * from: 即将要离开的路由对象\n * next: 是一个方法，可以指定路由地址，进行路由跳转\n */\nimport router from \"./router\";\nimport { getUserInfo } from \"./api/login\";\nrouter.beforeEach(function (to, from, next) {\n  // 1. 获取token\n  var token = localStorage.getItem('mxg-msm-token');\n  console.log('token', token);\n\n  if (!token) {\n    // 1.1 如果没有获取到，\n    // 要访问非登录页面，则不让访问，加到登录页面 /login\n    if (to.path !== '/login') {\n      next({\n        path: '/login'\n      });\n    } else {\n      // 请求登录页面 /login\n      next();\n    }\n  } else {\n    // 1.2 获取到token, \n    // 1.2.1 请求路由 /login ，那就去目标路由\n    if (to.path === '/login') {\n      next();\n    } else {\n      // 1.2.2 请求路由非登录页面，先在本地查看是否有用户信息，\n      var userInfo = localStorage.getItem('mxg-msm-user');\n\n      if (userInfo) {\n        // 本地获取到，则直接让它去目标路由\n        next();\n      } else {\n        // 如果本地没有用户信息， 就通过token去获取用户信息，\n        getUserInfo(token).then(function (response) {\n          var resp = response.data;\n\n          if (resp.flag) {\n            // 如果获取到用户信息，则进行非登录页面，否则回到登录页面\n            // 保存到本地\n            localStorage.setItem('mxg-msm-user', JSON.stringify(resp.data));\n            next();\n          } else {\n            // 未获取到用户信息，重新登录 \n            next({\n              path: '/login'\n            });\n          }\n        });\n      }\n    }\n  }\n});",{"version":3,"sources":["/media/hsy/128/hsy-IdeaProject/mall-app-web/src/permission.js"],"names":["router","getUserInfo","beforeEach","to","from","next","token","localStorage","getItem","console","log","path","userInfo","then","response","resp","data","flag","setItem","JSON","stringify"],"mappings":"AAAA;;;;;;;;;AAUC,OAAOA,MAAP;AACA,SAAQC,WAAR;AAEAD,MAAM,CAACE,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAYC,IAAZ,EAAqB;AACpC;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;;AAEA,MAAG,CAACA,KAAJ,EAAW;AACP;AACA;AACA,QAAGH,EAAE,CAACQ,IAAH,KAAY,QAAf,EAAyB;AACrBN,MAAAA,IAAI,CAAC;AAACM,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAJ;AACH,KAFD,MAEM;AACF;AACAN,MAAAA,IAAI;AACP;AACJ,GATD,MASM;AACF;AACA;AACA,QAAGF,EAAE,CAACQ,IAAH,KAAY,QAAf,EAAyB;AACrBN,MAAAA,IAAI;AACP,KAFD,MAEM;AACF;AACA,UAAMO,QAAQ,GAAGL,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAjB;;AACA,UAAGI,QAAH,EAAa;AACT;AACAP,QAAAA,IAAI;AACP,OAHD,MAGM;AACF;AACAJ,QAAAA,WAAW,CAACK,KAAD,CAAX,CAAmBO,IAAnB,CAAwB,UAAAC,QAAQ,EAAI;AAChC,cAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAtB;;AACA,cAAGD,IAAI,CAACE,IAAR,EAAc;AACV;AACA;AACAV,YAAAA,YAAY,CAACW,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACC,IAApB,CAArC;AACAX,YAAAA,IAAI;AACP,WALD,MAKM;AACF;AACAA,YAAAA,IAAI,CAAC;AAACM,cAAAA,IAAI,EAAE;AAAP,aAAD,CAAJ;AACH;AACJ,SAXD;AAYH;AAEJ;AACJ;AAGH,CA7CD","sourcesContent":["/**\n * 权限校验：\n *  Vue Router中的 前置钩子函数 beforeEach(to, from, next)\n * 当进行路由跳转之前，进行判断 是否已经登录 过，登录过则允许访问非登录页面，否则 回到登录页\n * \n * to:  即将要进入的目标路由对象\n * from: 即将要离开的路由对象\n * next: 是一个方法，可以指定路由地址，进行路由跳转\n */\n\n import router from './router'\n import {getUserInfo} from './api/login'\n\n router.beforeEach((to, from , next) => {\n    // 1. 获取token\n    const token = localStorage.getItem('mxg-msm-token')\n    console.log('token', token)\n    \n    if(!token) {\n        // 1.1 如果没有获取到，\n        // 要访问非登录页面，则不让访问，加到登录页面 /login\n        if(to.path !== '/login') {\n            next({path: '/login'})\n        }else {\n            // 请求登录页面 /login\n            next()\n        }\n    }else {\n        // 1.2 获取到token, \n        // 1.2.1 请求路由 /login ，那就去目标路由\n        if(to.path === '/login') {\n            next()\n        }else {\n            // 1.2.2 请求路由非登录页面，先在本地查看是否有用户信息，\n            const userInfo = localStorage.getItem('mxg-msm-user')\n            if(userInfo) {\n                // 本地获取到，则直接让它去目标路由\n                next()\n            }else {\n                // 如果本地没有用户信息， 就通过token去获取用户信息，\n                getUserInfo(token).then(response => {\n                    const resp = response.data\n                    if(resp.flag) {\n                        // 如果获取到用户信息，则进行非登录页面，否则回到登录页面\n                        // 保存到本地\n                        localStorage.setItem('mxg-msm-user', JSON.stringify(resp.data))\n                        next()\n                    }else {\n                        // 未获取到用户信息，重新登录 \n                        next({path: '/login'})\n                    }\n                })\n            }\n            \n        }\n    }\n    \n\n })"]}]}