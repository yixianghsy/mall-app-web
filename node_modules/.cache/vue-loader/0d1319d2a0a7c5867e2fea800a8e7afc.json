{"remainingRequest":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/hsy/128/hsy-IdeaProject/mall-app-web/src/views/ login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/src/views/ login/index.vue","mtime":1622986824931},{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/hsy/128/hsy-IdeaProject/mall-app-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {login, getUserInfo} from '@/api/login'\nexport default {\n    data() {\n      return {\n        form: {\n            username: '',\n            password: ''\n         },\n         //通过 rules 属性传入约定的验证规则。并将 el-form-item 的 prop 属性设置为需校验的字段名即可\n         rules: {\n             username: [// 对应el-form-item 的 prop 值\n                 //required是否必填项\n                  {required: true, message: '帐号不能为空', trigger: 'blur' },\n             ],\n             password: [\n                 {required: true, message: '密码不能为空', trigger: 'blur' },\n             ]\n          }\n          }\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate(valid => {\n            // console.log(valid)\n            if (valid) {\n                // 提交表单给后台进行验证是否正确\n                login(this.form.username, this.form.password).then(response => {\n                    const resp = response.data \n                    console.log(resp, resp.flag, resp.data.token,resp.message)\n                    if(resp.flag) {\n                        // 验证成功, 通过token去获取用户信息\n                        getUserInfo(resp.data.token).then(response => {\n                            const respUser = response.data\n                            if(respUser.flag){\n                                // 获取到了用户的数据\n                                console.log('userInfo', respUser.data)\n                                // 1. 保存 token ，用户信息\n                                localStorage.setItem('mxg-msm-user', JSON.stringify(respUser.data))\n                                localStorage.setItem('mxg-msm-token', resp.data.token)\n                                // 前往首页 \n                                this.$router.push('/')\n                            }else {\n                                this.$message({\n                                    message: respUser.message,\n                                    type: 'warning'\n                                })\n                            }\n                            \n                        })\n                    }else {\n                        // 未通过，弹出警告\n                        // alert(resp.message)\n                        this.$message({\n                            message: resp.message,\n                            type: 'warning'\n                        });\n                    }\n                })\n            }else{\n                console.log('验证失败')\n                return false\n            }\n        })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/ login","sourcesContent":["<template>\n    <div class=\"login-container\">\n        <!-- ref 相当于 id，:model 表单数据对象, label-width 表单域标签的的宽度 -->\n      <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"80px\" class=\"login-form\">\n          <h2 class=\"login-title\">商场后台管理系统</h2>\n          <el-form-item label=\"帐号\" prop=\"username\">\n              <el-input v-model=\"form.username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"密码\" prop=\"password\">\n              <el-input v-model=\"form.password\" type=\"password\"></el-input>\n          </el-form-item>\n          <el-form-item>\n              <el-button type=\"primary\" @click=\"submitForm('form')\">登录</el-button>\n          </el-form-item>\n      </el-form>\n  </div>\n</template>\n\n<script>\nimport {login, getUserInfo} from '@/api/login'\nexport default {\n    data() {\n      return {\n        form: {\n            username: '',\n            password: ''\n         },\n         //通过 rules 属性传入约定的验证规则。并将 el-form-item 的 prop 属性设置为需校验的字段名即可\n         rules: {\n             username: [// 对应el-form-item 的 prop 值\n                 //required是否必填项\n                  {required: true, message: '帐号不能为空', trigger: 'blur' },\n             ],\n             password: [\n                 {required: true, message: '密码不能为空', trigger: 'blur' },\n             ]\n          }\n          }\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate(valid => {\n            // console.log(valid)\n            if (valid) {\n                // 提交表单给后台进行验证是否正确\n                login(this.form.username, this.form.password).then(response => {\n                    const resp = response.data \n                    console.log(resp, resp.flag, resp.data.token,resp.message)\n                    if(resp.flag) {\n                        // 验证成功, 通过token去获取用户信息\n                        getUserInfo(resp.data.token).then(response => {\n                            const respUser = response.data\n                            if(respUser.flag){\n                                // 获取到了用户的数据\n                                console.log('userInfo', respUser.data)\n                                // 1. 保存 token ，用户信息\n                                localStorage.setItem('mxg-msm-user', JSON.stringify(respUser.data))\n                                localStorage.setItem('mxg-msm-token', resp.data.token)\n                                // 前往首页 \n                                this.$router.push('/')\n                            }else {\n                                this.$message({\n                                    message: respUser.message,\n                                    type: 'warning'\n                                })\n                            }\n                            \n                        })\n                    }else {\n                        // 未通过，弹出警告\n                        // alert(resp.message)\n                        this.$message({\n                            message: resp.message,\n                            type: 'warning'\n                        });\n                    }\n                })\n            }else{\n                console.log('验证失败')\n                return false\n            }\n        })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-form {\n    width: 350px;\n    /* 上下间隙 160px, 左右自动居中 */\n    margin: 160px auto;\n    background-color: rgb(255,255,255,0.8);\n    padding: 28px;\n    border-radius: 20px;\n}\n.login-container {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: url('../../assets/login.jpg')\n}\n.login-title {\n    color: #303133;\n    text-align: center;\n}\n</style>"]}]}